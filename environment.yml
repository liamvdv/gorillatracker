name: research
channels:
  - conda-forge
  - nvidia # nvidia channel for cuda packages
  # We want to have a reproducible setup, so we don't want default channels,
  # which may be different for different users. All required channels should
  # be listed explicitly here.
  - nodefaults
  - pytorch-nightly
  - pyviz/label/dev
dependencies:
  - python=3.10 # or don't specify the version and use latest stable
  - pytorch=2.4.0
  - torchvision=0.19.0
  - wandb
  - lightning
  - transformers
  - tokenizers
  - datasets
  - evaluate
  - accelerate
  - sentencepiece
  - torchvision
  - faiss-cpu
  - timm  # maybe necessary to switch to faiss-cuda

  # Good to have
  - numpy
  - scipy
  - pandas
  - seqeval
  - scikit-learn
  - matplotlib
  - seaborn

  # Misc
  - pydantic
  - jsonlines
  - zstandard
  - debugpy
  - tqdm
  - ipykernel
  - bokeh
  - colorcet
  - shapely

  # Dev dependencies
  - black
  - ruff
  - isort
  - mypy=1.10.0
  - pytest
  - typer
  - ipywidgets

  # pip dependencies
  - pip
  - pip:
      - pipx
       # NOTE(memben): ðŸš© see end of dockerfile, needed to fix dependency hell, https://github.com/ultralytics/ultralytics/issues/1270
      - opencv-python-headless
      - psycopg2-binary
      - sqlalchemy
      - alembic
      - warmup-scheduler
      - simple_parsing
      - print-on-steroids[exceptions]
      - ultralytics 
      - lapx>=0.5.2 # for ultralytics tracking
      - types-PyYAML
      - git+https://github.com/facebookresearch/segment-anything.git
      - umap-learn
      - bokeh
      - colorcet
      - grad-cam
      - facenet_pytorch
      - typer
      - opencv-contrib-python
      - onnx
      - pyyaml
      - tf-nightly==2.17.0.dev20240520 -f https://download.pytorch.org/whl/nightly/torch_nightly.html
      - torch_xla@https://storage.googleapis.com/pytorch-xla-releases/wheels/cuda/12.1/torch_xla-nightly+20240429-cp310-cp310-linux_x86_64.whl
      - ai-edge-torch==0.1.1



# Non-standard section listing target platforms for conda-lock:
platforms:
  - linux-64
  - osx-arm64 # This is for M1/M2 MacBooks
  # - linux-aarch64 # This is linux-arm64. We can build Docker images for M1/M2 Macs on top of this - won't support MPS though
  - win-64
